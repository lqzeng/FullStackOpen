{"version":3,"sources":["components/Person.js","components/Persons.js","components/PersonForm.js","components/Filter.js","components/Notification.js","services/phonebookservice.js","App.js","index.js"],"names":["Person","filter","person","name","includes","number","Persons","persons","removePerson","map","key","id","value","onClick","PersonForm","onSubmit","newName","handleNameChange","newNumber","handleNumberChange","onChange","type","Filter","Notification","message","messageType","className","baseUrl","axios","get","then","response","data","newObject","post","window","confirm","delete","put","Footer","style","color","fontStyle","fontSize","App","useState","setPersons","setNewName","setNewNumber","newFilter","setNewFilter","setMessage","setMessageType","useEffect","phonebookService","initialPersons","event","console","log","target","preventDefault","i","length","toUpperCase","changedPerson","returnedObject","isNaN","alert","personObject","concat","setTimeout","parseInt","personToDelete","find","p","catch","error","ReactDOM","render","document","getElementById"],"mappings":"0NAUeA,EARA,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,OAErB,OACIA,EAAOC,KAAKC,SAASH,GAAU,8BAAOC,EAAOC,KAAd,IAAqBD,EAAOG,OAA5B,KAA8C,oCCWtEC,EAbC,SAAC,GAAqC,IAApCL,EAAmC,EAAnCA,OAAQM,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,aAE/B,OAGID,EAAQE,KAAI,SAAAP,GAAM,OACd,yBAAKQ,IAAOR,EAAOS,IACZ,kBAAC,EAAD,CAAQD,IAAKR,EAAOC,KAAMD,OAAQA,EAAQD,OAAQA,IADzD,IACqE,IAC9D,4BAAQW,MAAOV,EAAOS,GAAIE,QAASL,GAAnC,iBCiBJM,EA1BI,SAAC,GAA0E,IAAzEC,EAAwE,EAAxEA,SAAUC,EAA8D,EAA9DA,QAASC,EAAqD,EAArDA,iBAAkBC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,mBAEjE,OAEI,0BAAMJ,SAAUA,GACZ,sCACU,2BACFH,MAAOI,EACPI,SAAUH,KAGlB,wCACY,2BACJL,MAAOM,EACPE,SAAUD,KAGlB,6BACI,4BAAQE,KAAK,UAAb,UCNDC,EAZA,SAAC,GAAuB,IAAtBV,EAAqB,EAArBA,MAAOQ,EAAc,EAAdA,SAEpB,OACI,kDACsB,2BACdR,MAAOA,EACPQ,SAAUA,MCMXG,EAZM,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,YAC7B,OAAgB,OAAZD,EACO,KAIP,yBAAKE,UAAWD,GACXD,I,gBCNPG,EAAU,cAyBD,EAvBA,WAEX,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAqB9B,EAlBA,SAACC,GAEZ,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAgB9B,EAbA,SAAC9B,GACZ,GAAIiC,OAAOC,QAAP,kBAA0BlC,EAAOC,KAAjC,OAGA,OADgByB,IAAMS,OAAN,UAAgBV,EAAhB,YAA2BzB,EAAOS,KACnCmB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SASlC,EALA,SAACrB,EAAIsB,GAEhB,OADgBL,IAAMU,IAAN,UAAaX,EAAb,YAAwBhB,GAAMsB,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCjBvCO,EAAS,WAMX,OACI,yBAAKC,MANW,CAChBC,MAAO,OACPC,UAAW,SACXC,SAAU,KAIN,6BACA,4CA2JGC,EArJH,WAAO,IAAD,EAEgBC,mBAAS,IAFzB,mBAEPtC,EAFO,KAEEuC,EAFF,OAIgBD,mBAAS,IAJzB,mBAIP7B,EAJO,KAIE+B,EAJF,OAMoBF,mBAAS,IAN7B,mBAMP3B,EANO,KAMI8B,EANJ,OAQoBH,mBAAS,IAR7B,mBAQPI,EARO,KAQIC,EARJ,OAUgBL,mBAAS,MAVzB,mBAUPrB,EAVO,KAUE2B,EAVF,OAYwBN,mBAAS,MAZjC,mBAYPpB,EAZO,KAYM2B,EAZN,KAedC,qBAAU,WACNC,IAEKxB,MAAK,SAAAyB,GACFT,EAAWS,QAErB,IAuGF,OACI,6BACI,yCAEA,kBAAC,EAAD,CAAc/B,QAASA,EAASC,YAAaA,IAC7C,kBAAC,EAAD,CAAQb,MAAOqC,EAAW7B,SAXP,SAACoC,GACxBC,QAAQC,IAAI,qBAAuBF,EAAMG,OAAO/C,OAChDsC,EAAaM,EAAMG,OAAO/C,UAWtB,gDAEA,kBAAC,EAAD,CACIG,SA7GI,SAACyC,GAEbA,EAAMI,iBAGN,IAAK,IAAIC,EAAI,EAAGA,EAAEtD,EAAQuD,OAAQD,IAE9B,GAAI7C,EAAQ+C,gBAAkBxD,EAAQsD,GAAG1D,KAAK4D,cAAe,CACzD,GAAI5B,OAAOC,QAAP,UAAkBpB,EAAlB,mEACJ,CAEI,IAAMgD,EAAa,2BAAQzD,EAAQsD,IAAhB,IAAoBxD,OAASa,IAGhDoC,EACY/C,EAAQsD,GAAGlD,GAAIqD,GAGtBlC,MAAK,SAAAmC,GACFnB,EAAWvC,EAAQE,KAAI,SAAAuD,GAAa,OAAIA,EAAcrD,KAAOJ,EAAQI,GAAKqD,EAAgBC,SAStG,OAJAlB,EAAW,SACXC,EAAa,IAQrB,GAAIkB,MAAMhD,GACNiB,OAAOgC,MAAP,qDADJ,CAKA,IAAMC,EAAe,CACjBjE,KAAMa,EACNX,OAAQa,GAGZoC,EACYc,GACPtC,MAAK,SAAAmC,GAEFnB,EAAWvC,EAAQ8D,OAAOJ,IAC1Bb,EAAe,WACfD,EAAW,SAAD,OAAUiB,EAAajE,KAAvB,kBACVmE,YAAW,WACPlB,EAAe,MACfD,EAAW,QACZ,KAGHJ,EAAW,IACXC,EAAa,SAqDbhC,QAASA,EACTC,iBA5Ba,SAACuC,GACtBC,QAAQC,IAAI,mBAAqBF,EAAMG,OAAO/C,OAC9CmC,EAAWS,EAAMG,OAAO/C,QA2BhBM,UAAWA,EACXC,mBAzBe,SAACqC,GACxBC,QAAQC,IAAI,qBAAuBF,EAAMG,OAAO/C,OAChDoC,EAAaQ,EAAMG,OAAO/C,UAyBtB,uCAEA,kBAAC,EAAD,CAASL,QAASA,EAASN,OAAQgD,EAAWzC,aAvDjC,SAACgD,GAClBA,EAAMI,iBACN,IAAMjD,EAAK4D,SAASf,EAAMG,OAAO/C,OAC3B4D,EAAiBjE,EAAQkE,MAAK,SAAAC,GAAC,OAAIA,EAAE/D,KAAOA,KAElD2C,EACYkB,GACPG,OAAM,SAAAC,GACHxB,EAAe,SACfD,EAAW,eAAD,OAAgBqB,EAAerE,KAA/B,uCAEVmE,YAAW,WACPlB,EAAe,MACfD,EAAW,QACb,KACFL,EAAWvC,EAAQN,QAAO,SAAAuE,GAAc,OAAIA,EAAe7D,KAAOA,SAEtEmC,EAAWvC,EAAQN,QAAO,SAAAuE,GAAc,OAAIA,EAAe7D,KAAOA,SAwClE,kBAAC,EAAD,Q,MCjKZkE,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.7fd4054c.chunk.js","sourcesContent":["import React from 'react'\n\nconst Person = ({filter, person}) => {\n \n    return (\n        person.name.includes(filter) ? <span>{person.name} {person.number} </span> : <span> </span>\n    )\n\n}\n\nexport default Person","import React from 'react'\nimport Person from './Person'\n\nconst Persons = ({filter, persons, removePerson}) => {\n\n    return (\n            // returns an array from the map parameters (which is a function)\n            // that returns a call to the Person component\n        persons.map(person => \n            <div key = {person.id}>\n                   <Person key={person.name} person={person} filter={filter} /> {' '}\n                   <button value={person.id} onClick={removePerson}> delete </button>\n            </div>\n        )   \n    )\n}\nexport default Persons","import React from 'react'\n\nconst PersonForm = ({onSubmit, newName, handleNameChange, newNumber, handleNumberChange}) => {\n\n    return (\n    \n        <form onSubmit={onSubmit}>\n            <div>\n                name: <input\n                    value={newName}\n                    onChange={handleNameChange}\n                />\n            </div>\n            <div>\n                number: <input\n                    value={newNumber}\n                    onChange={handleNumberChange}\n                />\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>    \n        \n    )\n\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Filter = ({value, onChange}) => {\n\n    return (\n        <div>\n            filter shown with <input\n                value={value}\n                onChange={onChange}\n            />\n        </div>\n   )\n\n}\nexport default Filter","import React from 'react'\n\nconst Notification = ({ message, messageType }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className={messageType}>\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import axios from 'axios'\n\n//frontend and backend same address. remove server declaration\nconst baseUrl = 'api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = (newObject) => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst remove = (person) => {\n    if (window.confirm(`Delete '${person.name}'?`))\n        {\n        const request = axios.delete(`${baseUrl}/${person.id}`)\n        return request.then(response => response.data)\n    }\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, remove, update}","import React, { useState, useEffect } from 'react'\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport Filter from './components/Filter'\nimport Notification from './components/Notification'\nimport phonebookService from './services/phonebookservice'\n\n//inline footer\nconst Footer = () => {\n    const footerStyle = {\n        color: 'grey',\n        fontStyle: 'italic',\n        fontSize: 12\n    }\n    return (\n        <div style={footerStyle}>\n            <br />\n            <em>Lucas Zeng</em>\n        </div>\n    )\n}\n\n\nconst App = () => {\n\n    const [persons, setPersons] = useState([])\n\n    const [newName, setNewName] = useState('')\n\n    const [newNumber, setNewNumber] = useState('')\n\n    const [newFilter, setNewFilter] = useState('')\n\n    const [message, setMessage] = useState(null)\n\n    const [messageType, setMessageType] = useState(null)  //success or error\n\n\n    useEffect(() => {\n        phonebookService\n            .getAll()\n            .then(initialPersons => {\n                setPersons(initialPersons)\n            })\n    },[])\n\n\n    //event handler for newName\n    const addInfo = (event) => {\n\n        event.preventDefault()\n\n        // check for name existing\n        for (var i = 0; i<persons.length; i++){\n\n            if (newName.toUpperCase() === persons[i].name.toUpperCase()) {\n                if (window.confirm(`${newName} is already in the phonebook, replace old number with new one?`))\n                {   \n                    //object copy with a new number\n                    const changedPerson = { ...persons[i], number:  newNumber }\n\n                    //updates the person with the new object\n                    phonebookService\n                        .update(persons[i].id, changedPerson)\n\n                        //set new person array\n                        .then(returnedObject => {\n                            setPersons(persons.map(changedPerson => changedPerson.id !== persons.id ? changedPerson : returnedObject))\n                        })\n                        \n                }\n\n                setNewName('')\n                setNewNumber('')\n\n                //end function early\n                return\n            }\n        }\n\n        // check for non-numeric number\n        if (isNaN(newNumber)) {\n            window.alert(`Please enter numbers only in the number field`)\n            return\n        }\n\n        const personObject = {\n            name: newName,\n            number: newNumber\n            }\n\n        phonebookService\n            .create(personObject)\n            .then(returnedObject => {\n                //concat this new personObject to the person array\n                setPersons(persons.concat(returnedObject))\n                setMessageType('success')\n                setMessage(`Added ${personObject.name} to phonebook`)\n                setTimeout(() => {\n                    setMessageType(null)\n                    setMessage(null)\n                }, 5000)\n\n                //setNewName reset the value of the controlled input element\n                setNewName('')\n                setNewNumber('')\n            })\n    }\n\n\n    const removePerson = (event) => {\n        event.preventDefault()\n        const id = parseInt(event.target.value)\n        const personToDelete = persons.find(p => p.id === id)\n\n        phonebookService\n            .remove(personToDelete)\n            .catch(error => {\n                setMessageType('error')\n                setMessage(`the person '${personToDelete.name}' was already deleted from server `             \n                )\n                setTimeout(() => {\n                    setMessageType(null)\n                    setMessage(null)                   \n                },3000)\n                setPersons(persons.filter(personToDelete => personToDelete.id !== id))\n            })\n            setPersons(persons.filter(personToDelete => personToDelete.id !== id))\n    }\n            \n\n    const handleNameChange = (event) => {\n        console.log(\"newName changed \" + event.target.value)\n        setNewName(event.target.value)\n    }\n\n    const handleNumberChange = (event) => {\n        console.log(\"newNumber changed \" + event.target.value)\n        setNewNumber(event.target.value)\n    }\n\n    const handleFilterChange = (event) => {\n        console.log(\"newFilter changed \" + event.target.value)\n        setNewFilter(event.target.value)\n    }\n\n\n    return (\n        <div>\n            <h1>Phonebook</h1>\n\n            <Notification message={message} messageType={messageType} />\n            <Filter value={newFilter} onChange={handleFilterChange} />     \n\n            <h2>add a new person</h2>\n\n            <PersonForm\n                onSubmit={addInfo}\n                newName={newName}\n                handleNameChange={handleNameChange}\n                newNumber={newNumber}\n                handleNumberChange={handleNumberChange} />\n\n            <h2>Numbers</h2>\n\n            <Persons persons={persons} filter={newFilter} removePerson={removePerson} />\n\n            <Footer/>\n        </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}